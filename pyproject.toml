[project]
name = "qnty"
version = "0.1.7"
description = "High-performance unit system library for Python with dimensional safety and fast unit conversions"
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.11, <3.14"
authors = [
    { name = "tn3wman" },
]
keywords = ["units", "dimensional analysis", "engineering", "physics", "quantities", "measurements"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "numpy>=2.3.2",
]

[project.urls]
Homepage = "https://github.com/tn3wman/qnty"
Repository = "https://github.com/tn3wman/qnty"
"Bug Tracker" = "https://github.com/tn3wman/qnty/issues"
Documentation = "https://github.com/tn3wman/qnty#readme"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "ruff>=0.1.0",
]
benchmark = [
    "Pint>=0.24.4",
]

[tool.poetry]
packages = [
    { include = "qnty", from = "src" },
]

[tool.ruff]
line-length = 200
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings  
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
]
ignore = [
    "E501",   # line too long (handled by line-length)
    "B018",   # no-else-return
    "W293",   # blank line contains whitespace
    "F403",   # star imports used in __init__.py files for auto-generated modules
    "F405",   # names may be undefined from star imports (acceptable for auto-generated modules)
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"